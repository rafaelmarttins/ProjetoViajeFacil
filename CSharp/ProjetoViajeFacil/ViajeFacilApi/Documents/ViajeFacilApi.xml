<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ViajeFacilApi</name>
    </assembly>
    <members>
        <member name="T:ViajeFacilApi.Controllers.CidadeController">
            <summary>
            </summary>
        </member>
        <member name="M:ViajeFacilApi.Controllers.CidadeController.#ctor(ViajeFacil.Dominio.EF.ViajeFacilContexto)">
            <summary>
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ViajeFacilApi.Controllers.CidadeController.GetAll(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Lista todos os registros de Cidade por Paginação.
            </summary>
            <param name="take"> Onde inicia os resultados da pesquisa. </param>
            <param name="skip"> Quantos registros serão retornados. </param>
            <returns> Todos os registros. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.CidadeController.GetAll(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Lista todos os registros de Cidade por Paginação e Sigla UF.
            </summary>
            <param name="siglauf"> Informar a Sigla UF. </param>
            <param name="take"> Onde inicia os resultados da pesquisa. </param>
            <param name="skip"> Quantos registros serão retornados. </param>
            <returns></returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.CidadeController.GetByEstado(System.Int64)">
            <summary>
            Listar todos os registros de Cidade por Estado.
            </summary>
            <param name="estadocod"> Chave de pesquisa. </param>
            <returns> Registro localizado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.CidadeController.GetById(System.Int64)">
            <summary>
             Lista os registro usando a chave de Cidade.
            </summary>
            <param name="chave"> Chave de pesquisa. </param>
            <returns> Registro localizado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.CidadeController.Post(ViajeFacil.Poco.CidadePoco)">
            <summary>
            Inclui um novo dado em Cidade.
            </summary>
            <param name="poco"> Dados que será incluido. </param>
            <returns> Dados incluido. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.CidadeController.Put(ViajeFacil.Poco.CidadePoco)">
            <summary>
            Altera um dado existente em Cidade.
            </summary>
            <param name="poco"> Altera o dado selecionado. </param>
            <returns> Altera o dado selecionado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.CidadeController.DeleteById(System.Int64)">
            <summary>
            Exclui um registro existente no recurso, utilizando um id.
            </summary>
            <param name="chave"> Chave para localização. </param>
            <returns> Dado excluido por Id. </returns>
        </member>
        <member name="T:ViajeFacilApi.Controllers.EnderecoController">
            <summary>
            </summary>
        </member>
        <member name="M:ViajeFacilApi.Controllers.EnderecoController.#ctor(ViajeFacil.Dominio.EF.ViajeFacilContexto)">
            <summary>
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ViajeFacilApi.Controllers.EnderecoController.GetAll(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Lista todos os registros de Endereco por Paginação.
            </summary>
            <param name="take"> Onde inicia os resultados da pesquisa. </param>
            <param name="skip"> Quantos registros serão retornados. </param>
            <returns> Todos os registros. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.EnderecoController.GetByCidade(System.Int32)">
            <summary>
            Listar todos os registros de Endereço por Cidade.
            </summary>
            <param name="cidadecod"> Chave de pesquisa. </param>
            <returns> Registro localizado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.EnderecoController.GetById(System.Int64)">
            <summary>
             Lista os registro usando a chave de Endereco.
            </summary>
            <param name="chave"> Chave de pesquisa. </param>
            <returns> Registro localizado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.EnderecoController.Post(ViajeFacil.Poco.EnderecoPoco)">
            <summary>
            Inclui um novo dado em Endereço.
            </summary>
            <param name="poco"> Dados que será incluido. </param>
            <returns> Dados incluido. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.EnderecoController.Put(ViajeFacil.Poco.EnderecoPoco)">
            <summary>
            Altera um dado existente em Endereco.
            </summary>
            <param name="poco"> Altera o dado selecionado. </param>
            <returns> Altera o dado selecionado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.EnderecoController.DeleteById(System.Int64)">
            <summary>
            Exclui um registro existente no recurso, utilizando um id.
            </summary>
            <param name="chave"> Chave para localização. </param>
            <returns> Dado excluido por Id. </returns>
        </member>
        <member name="T:ViajeFacilApi.Controllers.EstadoController">
            <summary>
            </summary>
        </member>
        <member name="M:ViajeFacilApi.Controllers.EstadoController.#ctor(ViajeFacil.Dominio.EF.ViajeFacilContexto)">
            <summary>
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ViajeFacilApi.Controllers.EstadoController.GetAll(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Lista todos os registros de Estado por Paginação.
            </summary>
            <param name="take"> Onde inicia os resultados da pesquisa. </param>
            <param name="skip"> Quantos registros serão retornados. </param>
            <returns> Todos os registros. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.EstadoController.GetByRegiao(System.Int64)">
            <summary>
            Listar todos os registros de Cidade por chave Região.
            </summary>
            <param name="regiaocod"> Chave de pesquisa. </param>
            <returns> Registro localizado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.EstadoController.GetById(System.Int64)">
            <summary>
             Lista os registro usando a chave de Estado.
            </summary>
            <param name="chave"> Chave de pesquisa. </param>
            <returns> Registro localizado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.EstadoController.Post(ViajeFacil.Poco.EstadoPoco)">
            <summary>
            Inclui um novo dado em Estado.
            </summary>
            <param name="poco"> Dados que será incluido. </param>
            <returns> Dados incluido. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.EstadoController.Put(ViajeFacil.Poco.EstadoPoco)">
            <summary>
            Altera um dado existente em Estado.
            </summary>
            <param name="poco"> Altera o dado selecionado. </param>
            <returns> Altera o dado selecionado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.EstadoController.DeleteById(System.Int64)">
            <summary>
            Exclui um registro existente no recurso, utilizando um id.
            </summary>
            <param name="chave"> Chave para localização. </param>
            <returns> Dado excluido por Id. </returns>
        </member>
        <member name="T:ViajeFacilApi.Controllers.EventoController">
            <summary>
            </summary>
        </member>
        <member name="M:ViajeFacilApi.Controllers.EventoController.#ctor(ViajeFacil.Dominio.EF.ViajeFacilContexto)">
            <summary>
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ViajeFacilApi.Controllers.EventoController.GetAll(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Lista todos os registros de Evento por Paginação.
            </summary>
            <param name="take"> Onde inicia os resultados da pesquisa. </param>
            <param name="skip"> Quantos registros serão retornados. </param>
            <returns> Todos os registros. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.EventoController.GetByInstituicao(System.Int64)">
            <summary>
            Listar todos os registros de Evento por chave Instituição.
            </summary>
            <param name="instituicaocod"> Chave de pesquisa. </param>
            <returns> Registro localizado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.EventoController.GetByEndereco(System.Int64)">
            <summary>
            Listar todos os registros de Evento por chave Endereço.
            </summary>
            <param name="enderecocod"> Chave de pesquisa. </param>
            <returns> Registro localizado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.EventoController.GetByUsuarioResponsavel(System.Int64)">
            <summary>
            Listar todos os registros de Evento por chave Usuário Responsável.
            </summary>
            <param name="usuariocod"> Chave de pesquisa. </param>
            <returns> Registro localizado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.EventoController.GetById(System.Int64)">
            <summary>
             Lista os registro usando a chave de Evento.
            </summary>
            <param name="chave"> Chave de pesquisa. </param>
            <returns> Registro localizado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.EventoController.Post(ViajeFacil.Poco.EventoPoco)">
            <summary>
            Inclui um novo dado em Evento.
            </summary>
            <param name="poco"> Dados que será incluido. </param>
            <returns> Dados incluido. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.EventoController.Put(ViajeFacil.Poco.EventoPoco)">
            <summary>
            Altera um dado existente em Evento.
            </summary>
            <param name="poco"> Altera o dado selecionado. </param>
            <returns> Altera o dado selecionado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.EventoController.DeleteById(System.Int64)">
            <summary>
            Exclui um registro existente no recurso, utilizando um id.
            </summary>
            <param name="chave"> Chave para localização. </param>
            <returns> Dado excluido por Id. </returns>
        </member>
        <member name="T:ViajeFacilApi.Controllers.InstituicaoController">
            <summary>
            </summary>
        </member>
        <member name="M:ViajeFacilApi.Controllers.InstituicaoController.GetAll(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Lista todos os registros de Instituição por Paginação.
            </summary>
            <param name="take"> Onde inicia os resultados da pesquisa. </param>
            <param name="skip"> Quantos registros serão retornados. </param>
            <returns> Todos os registros. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.InstituicaoController.GetByEndereco(System.Int64)">
            <summary>
            Listar todos os registros de Instituição por chave Endereço.
            </summary>
            <param name="enderecocod"> Chave de pesquisa. </param>
            <returns> Registro localizado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.InstituicaoController.GetById(System.Int64)">
            <summary>
             Lista os registro usando a chave de Instituição.
            </summary>
            <param name="chave"> Chave de pesquisa. </param>
            <returns> Registro localizado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.InstituicaoController.Post(ViajeFacil.Poco.InstituicaoPoco)">
            <summary>
            Inclui um novo dado em Instituição.
            </summary>
            <param name="poco"> Dados que será incluido. </param>
            <returns> Dados incluido. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.InstituicaoController.Put(ViajeFacil.Poco.InstituicaoPoco)">
            <summary>
            Altera um dado existente em Instituição.
            </summary>
            <param name="poco"> Altera o dado selecionado. </param>
            <returns> Altera o dado selecionado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.InstituicaoController.DeleteById(System.Int64)">
            <summary>
            Exclui um registro existente no recurso, utilizando um id.
            </summary>
            <param name="chave"> Chave para localização. </param>
            <returns> Dado excluido por Id. </returns>
        </member>
        <member name="T:ViajeFacilApi.Controllers.PaisController">
            <summary>
            </summary>
        </member>
        <member name="M:ViajeFacilApi.Controllers.PaisController.#ctor(ViajeFacil.Dominio.EF.ViajeFacilContexto)">
            <summary>
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ViajeFacilApi.Controllers.PaisController.GetAll(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Lista todos os registros de País por Paginação.
            </summary>
            <param name="take"> Onde inicia os resultados da pesquisa. </param>
            <param name="skip"> Quantos registros serão retornados. </param>
            <returns> Todos os registros. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.PaisController.GetById(System.Int64)">
            <summary>
             Lista os registro usando a chave de País.
            </summary>
            <param name="chave"> Chave de pesquisa. </param>
            <returns> Registro localizado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.PaisController.Post(ViajeFacil.Poco.PaisPoco)">
            <summary>
            Inclui um novo dado em País.
            </summary>
            <param name="poco"> Dados que será incluido. </param>
            <returns> Dados incluido. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.PaisController.Put(ViajeFacil.Poco.PaisPoco)">
            <summary>
            Altera um dado existente em País.
            </summary>
            <param name="poco"> Altera o dado selecionado. </param>
            <returns> Altera o dado selecionado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.PaisController.DeleteById(System.Int64)">
            <summary>
            Exclui um registro existente no recurso, utilizando um id.
            </summary>
            <param name="chave"> Chave para localização. </param>
            <returns> Dado excluido por Id. </returns>
        </member>
        <member name="T:ViajeFacilApi.Controllers.ParticipanteEventoController">
            <summary>
            </summary>
        </member>
        <member name="M:ViajeFacilApi.Controllers.ParticipanteEventoController.#ctor(ViajeFacil.Dominio.EF.ViajeFacilContexto)">
            <summary>
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ViajeFacilApi.Controllers.ParticipanteEventoController.GetAll(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Lista todos os registros de Participante Evento por Paginação.
            </summary>
            <param name="take"> Onde inicia os resultados da pesquisa. </param>
            <param name="skip"> Quantos registros serão retornados. </param>
            <returns> Todos os registros. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.ParticipanteEventoController.GetByEvento(System.Int64)">
            <summary>
            Listar todos os registros de Partipante Evento por chave Evento.
            </summary>
            <param name="partcod"> Chave de pesquisa. </param>
            <returns> Registro localizado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.ParticipanteEventoController.GetByUsuario(System.Int64)">
            <summary>
            Listar todos os registros de Partipante Evento por chave Usuario.
            </summary>
            <param name="usuariocod"> Chave de pesquisa. </param>
            <returns> Registro localizado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.ParticipanteEventoController.GetById(System.Int64)">
            <summary>
             Lista os registro usando a chave de Participante Evento.
            </summary>
            <param name="chave"> Chave de pesquisa. </param>
            <returns> Registro localizado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.ParticipanteEventoController.Post(ViajeFacil.Poco.ParticipanteEventoPoco)">
            <summary>
            Inclui um novo dado em Participante Evento.
            </summary>
            <param name="poco"> Dados que será incluido. </param>
            <returns> Dados incluido. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.ParticipanteEventoController.Put(ViajeFacil.Poco.ParticipanteEventoPoco)">
            <summary>
            Altera um dado existente em Participante Evento.
            </summary>
            <param name="poco"> Altera o dado selecionado. </param>
            <returns> Altera o dado selecionado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.ParticipanteEventoController.DeleteById(System.Int64)">
            <summary>
            Exclui um registro existente no recurso, utilizando um id.
            </summary>
            <param name="chave"> Chave para localização. </param>
            <returns> Dado excluido por Id. </returns>
        </member>
        <member name="T:ViajeFacilApi.Controllers.PontoParadaController">
            <summary>
            </summary>
        </member>
        <member name="M:ViajeFacilApi.Controllers.PontoParadaController.#ctor(ViajeFacil.Dominio.EF.ViajeFacilContexto)">
            <summary>
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ViajeFacilApi.Controllers.PontoParadaController.GetAll(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Lista todos os registros de Ponto Parada por Paginação.
            </summary>
            <param name="take"> Onde inicia os resultados da pesquisa. </param>
            <param name="skip"> Quantos registros serão retornados. </param>
            <returns> Todos os registros. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.PontoParadaController.GetByRota(System.Int64)">
            <summary>
            Listar todos os registros de Ponto Parada por chave Rota.
            </summary>
            <param name="rotacod"> Chave de pesquisa. </param>
            <returns> Registro localizado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.PontoParadaController.GetById(System.Int64)">
            <summary>
             Lista os registro usando a chave de Ponto Parada
            </summary>
            <param name="chave"> Chave de pesquisa. </param>
            <returns> Registro localizado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.PontoParadaController.Post(ViajeFacil.Poco.PontoParadaPoco)">
            <summary>
            Inclui um novo dado em Ponto Parada.
            </summary>
            <param name="poco"> Dados que será incluido. </param>
            <returns> Dados incluido. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.PontoParadaController.Put(ViajeFacil.Poco.PontoParadaPoco)">
            <summary>
            Altera um dado existente em Ponto Parada.
            </summary>
            <param name="poco"> Altera o dado selecionado. </param>
            <returns> Altera o dado selecionado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.PontoParadaController.DeleteById(System.Int64)">
            <summary>
            Exclui um registro existente no recurso, utilizando um id.
            </summary>
            <param name="chave"> Chave para localização. </param>
            <returns> Dado excluido por Id. </returns>
        </member>
        <member name="T:ViajeFacilApi.Controllers.RegiaoController">
            <summary>
            </summary>
        </member>
        <member name="M:ViajeFacilApi.Controllers.RegiaoController.#ctor(ViajeFacil.Dominio.EF.ViajeFacilContexto)">
            <summary>
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ViajeFacilApi.Controllers.RegiaoController.GetAll(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Lista todos os registros de Região por Paginação.
            </summary>
            <param name="take"> Onde inicia os resultados da pesquisa. </param>
            <param name="skip"> Quantos registros serão retornados. </param>
            <returns> Todos os registros. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.RegiaoController.GetByPais(System.Int32)">
            <summary>
            Listar todos os registros de Região por País.
            </summary>
            <param name="paiscod"> Chave de pesquisa. </param>
            <returns> Registro localizado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.RegiaoController.GetById(System.Int64)">
            <summary>
             Lista os registro usando a chave de Região.
            </summary>
            <param name="chave"> Chave de pesquisa. </param>
            <returns> Registro localizado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.RegiaoController.Post(ViajeFacil.Poco.RegiaoPoco)">
            <summary>
            Inclui um novo dado em Região.
            </summary>
            <param name="poco"> Dados que será incluido. </param>
            <returns> Dados incluido. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.RegiaoController.Put(ViajeFacil.Poco.RegiaoPoco)">
            <summary>
            Altera um dado existente em Região.
            </summary>
            <param name="poco"> Altera o dado selecionado. </param>
            <returns> Altera o dado selecionado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.RegiaoController.DeleteById(System.Int64)">
            <summary>
            Exclui um registro existente no recurso, utilizando um id.
            </summary>
            <param name="chave"> Chave para localização. </param>
            <returns> Dado excluido por Id. </returns>
        </member>
        <member name="T:ViajeFacilApi.Controllers.RotaController">
            <summary>
            </summary>
        </member>
        <member name="M:ViajeFacilApi.Controllers.RotaController.#ctor(ViajeFacil.Dominio.EF.ViajeFacilContexto)">
            <summary>
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ViajeFacilApi.Controllers.RotaController.GetAll(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Lista todos os registros de Rota por Paginação.
            </summary>
            <param name="take"> Onde inicia os resultados da pesquisa. </param>
            <param name="skip"> Quantos registros serão retornados. </param>
            <returns> Todos os registros. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.RotaController.GetById(System.Int64)">
            <summary>
             Lista os registro usando a chave de Rota.
            </summary>
            <param name="chave"> Chave de pesquisa. </param>
            <returns> Registro localizado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.RotaController.Post(ViajeFacil.Poco.RotaPoco)">
            <summary>
            Inclui um novo dado em Rota.
            </summary>
            <param name="poco"> Dados que será incluido. </param>
            <returns> Dados incluido. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.RotaController.Put(ViajeFacil.Poco.RotaPoco)">
            <summary>
            Altera um dado existente em Rota.
            </summary>
            <param name="poco"> Altera o dado selecionado. </param>
            <returns> Altera o dado selecionado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.RotaController.DeleteById(System.Int64)">
            <summary>
            Exclui um registro existente no recurso, utilizando um id.
            </summary>
            <param name="chave"> Chave para localização. </param>
            <returns> Dado excluido por Id. </returns>
        </member>
        <member name="T:ViajeFacilApi.Controllers.TipoUsuarioController">
            <summary>
            </summary>
        </member>
        <member name="M:ViajeFacilApi.Controllers.TipoUsuarioController.#ctor(ViajeFacil.Dominio.EF.ViajeFacilContexto)">
            <summary>
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ViajeFacilApi.Controllers.TipoUsuarioController.GetAll(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Lista todos os registros de Tipo Usuário por Paginação.
            </summary>
            <param name="take"> Onde inicia os resultados da pesquisa. </param>
            <param name="skip"> Quantos registros serão retornados. </param>
            <returns> Todos os registros. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.TipoUsuarioController.GetById(System.Int64)">
            <summary>
             Lista os registro usando a chave de Tipo Usuário.
            </summary>
            <param name="chave"> Chave de pesquisa. </param>
            <returns> Registro localizado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.TipoUsuarioController.Post(ViajeFacil.Poco.TipoUsuarioPoco)">
            <summary>
            Inclui um novo dado em Tipo Usuário.
            </summary>
            <param name="poco"> Dados que será incluido. </param>
            <returns> Dados incluido. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.TipoUsuarioController.Put(ViajeFacil.Poco.TipoUsuarioPoco)">
            <summary>
            Altera um dado existente em Tipo Usuário.
            </summary>
            <param name="poco"> Altera o dado selecionado. </param>
            <returns> Altera o dado selecionado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.TipoUsuarioController.DeleteById(System.Int64)">
            <summary>
            Exclui um registro existente no recurso, utilizando um id.
            </summary>
            <param name="chave"> Chave para localização. </param>
            <returns> Dado excluido por Id. </returns>
        </member>
        <member name="T:ViajeFacilApi.Controllers.UsuarioController">
            <summary>
            </summary>
        </member>
        <member name="M:ViajeFacilApi.Controllers.UsuarioController.#ctor(ViajeFacil.Dominio.EF.ViajeFacilContexto)">
            <summary>
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ViajeFacilApi.Controllers.UsuarioController.GetAll(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Lista todos os registros de Usuário por Paginação.
            </summary>
            <param name="take"> Onde inicia os resultados da pesquisa. </param>
            <param name="skip"> Quantos registros serão retornados. </param>
            <returns> Todos os registros. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.UsuarioController.GetByEndereco(System.Int64)">
            <summary>
            Listar todos os registros de Usuário por chave Endereço.
            </summary>
            <param name="enderecocod"> Chave de pesquisa. </param>
            <returns> Registro localizado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.UsuarioController.GetByTipoUsuario(System.Int64)">
            <summary>
            Listar todos os registros de Usuário por chave Tipo Usuário.
            </summary>
            <param name="tipcod"> Chave de pesquisa. </param>
            <returns> Registro localizado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.UsuarioController.GetByInstituicao(System.Int64)">
            <summary>
            Listar todos os registros de Usuário por chave Instituição.
            </summary>
            <param name="inscod"> Chave de pesquisa. </param>
            <returns> Registro localizado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.UsuarioController.GetById(System.Int64)">
            <summary>
             Lista os registro usando a chave de Usuário.
            </summary>
            <param name="chave"> Chave de pesquisa. </param>
            <returns> Registro localizado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.UsuarioController.Post(ViajeFacil.Poco.UsuarioPoco)">
            <summary>
            Inclui um novo dado em Usuário.
            </summary>
            <param name="poco"> Dados que será incluido. </param>
            <returns> Dados incluido. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.UsuarioController.Put(ViajeFacil.Poco.UsuarioPoco)">
            <summary>
            Altera um dado existente em Usuário.
            </summary>
            <param name="poco"> Altera o dado selecionado. </param>
            <returns> Altera o dado selecionado. </returns>
        </member>
        <member name="M:ViajeFacilApi.Controllers.UsuarioController.DeleteById(System.Int64)">
            <summary>
            Exclui um registro existente no recurso, utilizando um id.
            </summary>
            <param name="chave"> Chave para localização. </param>
            <returns> Dado excluido por Id. </returns>
        </member>
    </members>
</doc>